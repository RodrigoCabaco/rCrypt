import process
import filestream
import split
import rCB64
import modules
#args content; key;

num salt >>1
key*salt
str ALLCHARS >> "abcdefghijklmnopqrstuvwxyz,.ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890?!-_'|#$&/()= {};[]+ºª"
str _enter >>""
ReadFile file:enter; str:_enter;
str ALLCHARS.Add >>_enter;
list(str) "charset"
list(str).ToCharArray:ALLCHARS; to:charset;
list(str) "contentList"
list(str).ToCharArray:content; to:contentList;
str final_encrypted >>""

for index in range:contentList.length; name:for1; ident:"    ";
    getStrListValue(contentList[index])
    num ind >>0
    charset.IndexOf:contentList[index]; to:ind;
    ind*key
    numToStr(ind>>ind)
    str(final_encrypted+ )
    str(final_encrypted+ind)
}for1;
newln
color.green
Write "Encrypted Content: "
newln
str finalencrypt >>""
str(finalencrypt+")
str(finalencrypt+final_encrypted)
str(finalencrypt+")
str toEncode >>finalencrypt
modules.rCB64.encode(toEncode)
WriteStr {encoded}
color.reset
